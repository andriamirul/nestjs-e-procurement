name: 🚀 Deployment

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: ap-southeast-3
  IMG_REPO: e-procurement-service
  IMG_TAG: latest

permissions:
  contents: read

jobs:
  build:
    name: 🔨 Build
    runs-on: ubuntu-latest

    steps:
      - name: ⚙️ Checkout
        uses: actions/checkout@v3

      - name: 🔑 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔐 Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: 🔨 Build and Push Image
        id: build-image
        env:
          IMG_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          echo "🛠 Building Docker image..."
          docker build --target production \
            --cache-from=$IMG_REGISTRY/$IMG_REPO:$IMG_TAG \
            -t $IMG_REGISTRY/$IMG_REPO:$IMG_TAG .
    
          echo "🚀 Pushing Docker image..."
          docker push $IMG_REGISTRY/$IMG_REPO:$IMG_TAG

          echo "🏆 Done!"
          echo "image=$IMG_REGISTRY/$IMG_REPO:$ECR_SHORT_TAG" >> $GITHUB_OUTPUT

  deploy:
    name: 📦 Deploy
    environment: development
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Applications
        id: deploy-app
        run: |
          echo "Deploying application"
          curl -X POST ${{ secrets.DEV_PORTAINER_WEBHOOK_SERVICE }}
          echo "Deployed application"

